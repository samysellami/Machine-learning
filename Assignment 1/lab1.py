# -*- coding: utf-8 -*-
"""Lab1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18g8qZfHX8n5hOwUgjoN3LaB5tBcaq4f-

# Lab 1

## Welcome to Machine Learning course!

Let's start with Introduction to Python language

![Inspired photo](https://lh3.googleusercontent.com/T0nRU8B5orI1ek50pmgyEJGFzvF9v6fmcgHycnBFC7pKR3HcNUcjkZT_BysqFHymg4X1zODhoPbLLB-xGMnHlndDAPQ4YKh20rogUyCX001ErnMVIOVjCSYwkm05BYEIz7OZj_5IP9s_BMN8yZriprXX2XvsosMAoho0DBnoq94xJDcsNGO9spgjt4EAWcvMBl7w3QjuQ7yD7sZ5SELznCZSmTpJH4nYABN-tE7N1vv1m9iLTqZmecdNS3P_ff_fd9q6R_YqsYREaboRRDmzp6yX3OrTHrvlx77EC8XszFoCBO2BSMI4AcmVFUB8Z_3YU9ghbq7GmTcR6_ImcfX91ue6Vbiglq_0JdzzTQhkM7bTvxvzAPNqwZNeLtITJ_iCNBRrWGpIeUbd7rEdbxoiCOFpmNS73noVn2sVfHTQd0TO4iaXB0SdsFnLFHsjkLqcL-s6BJGvHArNyiNiCRrSaY_KWOQ2IaZ2a6sy00-Kt0kw_mUzqR7D7PzzgavCoPNPY-BJ3BnwqO2C5Kd1YmFkl3vjR3WSWJDVoAy2olOsvBcr8F9JDYIXAPH5i6CKIjrgAW2JyyPJtu9VQF5wEeuhgq6PINHubbVbs90s_7Jdaf_JHM0XsaS3HKGfscMl1lYmVsJOMr7NhyY61fWISOy0fSwFmnhs4swljg=w960-h640-no =500x)

 ðŸ“·Photo from: https://www.instagram.com/yagfarov

## Strings and input
"""

print('Hello, world!')

greetings = 'Hello, world!'
print(greetings)

x = 15
y = 27
print(x+y) # 42

str1 = 'Hello'
str2 = ', world!'
str1 += str2
print(str1)

name = input()
print('Hello, ' + name + '!')



"""## Integers"""

x = 2018
y = 100
print(x/y) # 20.18
print(x//y) # 20

x = 2 ** 10
print(x) # 1024
x = 2 ** 100
print(x) # 1267650600228229401496703205376

"""## Types"""

x = 'Hello'
print(type(x)) # <class 'str'>
x = 42
print(type(x)) # <class 'int'>
n = int(input())
print(2 ** n)

x = None
print(type(x))

"""## Import"""

import math
z = math.sqrt(1764)
print(z) # 42.0

from math import sqrt as sq
print(sq(1764)) # 42.0

"""## Conditions"""

x = True
y = False
if x and y:
  print('Both true')
elif x or y:
  print('X or Y is true')
else:
  print('Both false')

"""Ternary conditions"""

print('X and Y are true' if x == y else 'X or Y is false')

"""## Lists"""

my_list = [1,3,2,1,4,5,4,3,2,1,4,5,6]
print(my_list[0]) # 1
print(my_list[-1]) # 6
print(my_list[:3]) # [1, 3, 2]
print(my_list[3:]) # [1, 4, 5, 4, 3, 2, 1, 4, 5, 6]
print(my_list[1:3]) # [3, 2]
print(my_list[:]) # [1, 3, 2, 1, 4, 5, 4, 3, 2, 1, 4, 5, 6]
print(my_list[2:6:2]) # [2, 4]

r = range(10)
print(r)
print(type(r))
print(list(r))

"""## Cycles

### For loop
"""

sum = 0
for i in range(10):
  sum += i
  print('Current sum is: {}'.format(sum))
print('Total sum is {}'.format(sum))

for letter in 'Hello, world':
  print(letter)
  
a = [1,2,3,4,5,0,0,0,0,]
for i in a:
  print(i)

"""### While loop"""

sum = 0
i = 9
while i > 0:
  sum += 9
  i -= 1
  print('Current sum is: {}'.format(sum))
print('Total sum is {}'.format(sum))

"""### Continue and break"""

sum = 0
i = 9
while True:
  i -= 1
  if i < 0:
    break
  if i%2 == 0:
    print('Number {} was skipped'.format(i))
    continue
  print('Current sum is: {}'.format(sum))
print('Total sum is {}'.format(sum))

"""## Functions"""

import math

def hypotenuse(x, y):
  return math.sqrt(x ** 2 + y ** 2)

print(hypotenuse(3,4))

"""## Dictionaries"""

x = dict()
x['A_symbol'] = 1
x['B_symbol'] = 2
x['C_symbol'] = 3
print(x)
print(x['A_symbol'])
x = {'D_symbol': 4, 'E_symbol': 5, 'F_symbol': 6}
print(x)

"""## Libraries we will use"""

import numpy
import matplotlib
import pandas
import sklearn

"""### Tutorials
* Good Python and Numpy tutorial: [Python Numpy Tutorial](http://cs231n.github.io/python-numpy-tutorial/)

* Official Matplotlib tutorials: [Matplotlib tutorials](https://matplotlib.org/users/tutorials.html)

* Another Matplotlib tutorial: [Another Matplotlib tutorial](https://www.labri.fr/perso/nrougier/teaching/matplotlib/)

* Official Scikit-learn tutorials: [Scikit-learn tutorials](http://scikit-learn.org/stable/tutorial/index.html)

* Quick introduction to Pandas: [10 minutes to pandas](https://pandas.pydata.org/pandas-docs/stable/10min.html)

### Install packages using pip


```
pip install <library name>
```

For example:

```
pip install numpy
```

### Read dataset
"""

import pandas as pd

# data_frame = pd.read_csv('PathToYourFile/FileName.csv')

"""Download Iris dataset"""

!wget https://raw.githubusercontent.com/uiuc-cse/data-fa14/gh-pages/data/iris.csv

"""Let's take a look on data"""

data_frame = pd.read_csv('iris.csv')
# print(data_frame)
with pd.option_context('display.max_rows', 10, 'display.max_columns', 10, 'display.width', 500):
	print(data_frame)

"""Much nicer"""

display(data_frame)

"""### Upload data using Google colab"""

from google.colab import files
uploaded = files.upload()

"""### Visualization"""

import pandas as pd
from matplotlib import pyplot as plt

iris = pd.read_csv("iris.csv")
colors = {'setosa':'red', 'versicolor':'blue', 'virginica':'green'}

plt.scatter(iris.sepal_length, iris.sepal_width, 
						c=iris.species.apply(lambda x: colors[x]))
plt.xlabel("sepal length (cm)")
plt.ylabel("sepal width (cm)")
plt.legend(colors)
plt.show()

"""## Exercise

Write a python function which splits a dataframe into training and test sets:

Inputs: X (features), y(target), fraction  
Outputs: X_train, y_train, X_test, y_test  
Data should be shuffled before splitting  
Donâ€™t use ready utilities for train-test split. DIY!

Test it by passing iris data set and verifying the fraction
"""

import pandas as pd
import numpy as np
iris = pd.read_csv("iris.csv")

def select_test_train(data_frame, fraction):
  rand_num = np.random.rand(len(data_frame)) < fraction
  train = data_frame[rand_num]
  test = data_frame[~rand_num]
  print(type(rand_num))
  return train, test


tt, tst = select_test_train(iris, 0.6)

print(tt.shape)
print(tst.shape)

